function GetBrowserInfo() {var nVer=navigator.appVersion;var nAgt=navigator.userAgent;var browserName=navigator.appName;var fullVersion='' + parseFloat(navigator.appVersion);var majorVersion=parseInt(navigator.appVersion, 10);var nameOffset, verOffset, ix;/* In Opera, the true version is after "Opera" or after "Version" */if(window.navigator.userAgent.indexOf("Edge") > -1){browserName="Edge";var res=nAgt.match(/Edge\/(\d.+)/);if(res[1]){fullVersion=res[1];majorVersion=res[1].split(".")[0];}}else if ( ((verOffset=nAgt.indexOf("Opera")) != -1) || ((verOffset=nAgt.indexOf("OPR")) != -1))  {browserName="Opera";var offLen;if(nAgt.indexOf("Opera")>=0)offLen = 6;else{offLen = 4;}fullVersion=nAgt.substring(verOffset + offLen);if ((verOffset=nAgt.indexOf("Version")) != -1)fullVersion=nAgt.substring(verOffset + 8);}else if(nAgt.indexOf("UBrowser") > -1 || nAgt.indexOf("UCBrowser") > -1){browserName="UCBrowser";var matcStr,regex;if(nAgt.indexOf("UBrowser")!=-1){regex=/UBrowser\/(\d.+)/;}else{regex=/UCBrowser\/(\d.+)/;}var res=nAgt.match(regex);if(res[1]){fullVersion=res[1];var arr = res[1].split(".");majorVersion=parseFloat(arr[0]+"."+arr[1]);}}/* In MSIE, the true version is after "MSIE" in userAgent */else if ((verOffset=nAgt.indexOf("MSIE")) != -1) {browserName="Microsoft Internet Explorer";fullVersion=nAgt.substring(verOffset + 5);}/* In Chrome, the true version is after "Chrome" */else if ((verOffset=nAgt.indexOf("Chrome")) != -1) {browserName="Chrome";fullVersion=nAgt.substring(verOffset + 7);}/* In Safari, the true version is after "Safari" or after "Version" */else if ((verOffset=nAgt.indexOf("Safari")) != -1) {browserName="Safari";fullVersion=nAgt.substring(verOffset + 7);if ((verOffset=nAgt.indexOf("Version")) != -1)fullVersion=nAgt.substring(verOffset + 8);}/* In Firefox, the true version is after "Firefox" */else if ((verOffset=nAgt.indexOf("Firefox")) != -1) {browserName="Firefox";fullVersion=nAgt.substring(verOffset + 8);}/* In most other browsers, "name/version" is at the end of userAgent */else if ((nameOffset=nAgt.lastIndexOf(' ') + 1) < (verOffset=nAgt.lastIndexOf('/'))) {browserName=nAgt.substring(nameOffset, verOffset);fullVersion=nAgt.substring(verOffset + 1);if (browserName.toLowerCase() == browserName.toUpperCase()) {browserName=navigator.appName;}}/* trim the fullVersion string at semicolon/space if present*/if ((ix=fullVersion.indexOf(";")) != -1)fullVersion=fullVersion.substring(0, ix);if ((ix=fullVersion.indexOf(" ")) != -1)fullVersion=fullVersion.substring(0, ix);if(browserName!="UCBrowser"){majorVersion=parseInt('' + fullVersion, 10);if (isNaN(majorVersion)) {fullVersion='' + parseFloat(navigator.appVersion);majorVersion=parseInt(navigator.appVersion, 10);}}var obj ={b: browserName,v: fullVersion,mv: majorVersion,an: navigator.appName,ua: navigator.userAgent};if(obj.b === 'Safari'){var ind=navigator.userAgent.indexOf("OS X ");if(ind >= 0){var endInd=navigator.userAgent.indexOf(")",ind);if(endInd > ind)obj.os_x=navigator.userAgent.substring(ind+5,endInd).replace(/_/g,".");}}return  obj;}var desktopAllowedVersions={chrome: 40,edge: 17,firefox: 55,safari: 11.1,os_x: 10.9,opera: 37};var mobileAllowedVersions={chrome: 40,firefox: 44,opera: "all"/*edge: 17*//*ucbrowser:11.8*/};function isNotifAllowed() {return promise=new Promise(function (resolve, reject) {var bInfo=GetBrowserInfo();browserInfo=bInfo;/* console.log("browser info ", (bInfo)); */if (CheckBrowserCampatability(bInfo)) {isPrivateMode(bInfo.b.toLowerCase()).then(function (a) {resolve(bInfo);}).catch(function (err) {reject("not allowed");})} else{reject("not allowed");}})}function CheckBrowserCampatability(bInfo) {var browser=bInfo.b.toLowerCase();var isMobile=bInfo.ua.indexOf("Mobile") >= 0;var version=bInfo.mv;if (!isMobile) /* desktop*/{if(browser === 'safari'){if ('safari' in window && 'pushNotification' in window.safari) {return true;}return false;}/*console.log("desktopAllowedVersions[browser]", desktopAllowedVersions[browser]);*/if (desktopAllowedVersions[browser]) {if (desktopAllowedVersions[browser] === 'all' || desktopAllowedVersions[browser] <= version)return true;return false;}return false;}if (mobileAllowedVersions[browser]) {if (mobileAllowedVersions[browser] === 'all' || mobileAllowedVersions[browser] <= version)return true;return false;}return false;}function isPrivateMode(browser) {return promise=new Promise(function (resolve, reject) {if (browser === 'firefox') {try {localStorage.test = 2;resolve("done!")} catch (e) {reject("private browser")}var db=indexedDB.open("test");db.onerror=function () {console.log("firefox private browser");reject("private browser")};db.onsuccess=function () { resolve("done!")      };} else if (browser === 'safari') {var storage=window.sessionStorage;try {storage.setItem("someKeyHere", "test");storage.removeItem("someKeyHere");resolve("done!")} catch (e) {if (e.code === DOMException.QUOTA_EXCEEDED_ERR && storage.length === 0) {console.log(" private safari");reject("private browser")}}} else if (browser === 'chrome' || browser === 'opera') {var fs=window.RequestFileSystem || window.webkitRequestFileSystem;if (!fs) {console.log("FS check failed..");reject("private browser")}fs(window.TEMPORARY, 100, function (fs) {resolve("done!")}, function (err) {console.log(" private "+browser);reject("private browser")});}else if(browser === 'edge'){if(!window.indexedDB && (window.PointerEvent || window.MSPointerEvent)){reject("private browser")}else{resolve("done!")}}else if(browser === 'ucbrowser'){resolve("done!");}})}